Installing Danbooru from scratch is not for the faint of heart. You should be comfortable with the Linux command line. Installing on Windows is possible but is not officially supported. If you want something similar to Danbooru that is easier to install, try Shimmie (http://trac.shishnet.org/shimmie2). Shimmie uses PHP and MySQL and should be straightforward to install on most hosts.

For best performance, you will need at least 256MB of RAM for PostgreSQL and Rails. The memory requirement will grow as your database gets bigger; the main Danbooru database takes up around 400MB of memory by itself.

Danbooru has the following general dependencies:
- ruby-1.8.6
- libgd
- PostgreSQL 8.3

If you are installing on a Debian system, the following command should work:

>> apt-get install gcc make libreadline5-dev zlib1g-dev flex bison libgd2-noxpm libgd2-noxpm-dev ruby ruby1.8-dev rubygems ragel memcached libmemcache-dev subversion apache2 devscripts

As of this writing, PostgreSQL is still in experimental so you will have to install it manually. Download the following files from http://packages.debian.org/experimental/postgresql-8.3

- postgresql-8.3*.orig.tar.gz
- postgresql-8.3*.diff.gz
- postgresql-8.3*.dsc

Then run:

>> dpkg-source -x path/to/postgresql-8.3*.dsc
>> cd postgresql-8.3
>> debuild
>> dpkg -i *.deb

You will need to install several dependencies. You can just plug these into apt-get. It's now time to install the various Ruby gems.

>> gem install postgres -- --with-pgsql-lib-dir=/usr/lib --with-pgsql-include-dir=/usr/include/postgresql
>> for i in rails diff-lcs redcloth acts_as_versioned html5 mongrel memcache-client aws-s3 ; do gem install $i -y ; done

Once you've downloaded and installed everything, get the latest copy of Danbooru using Subversion:

>> svn co svn://danbooru.donmai.us/danbooru/trunk

Now it's time to configure your copy. Change into the config directory and edit the following files: database.yml, local_config.rb. Example files are provided.

You should manually build the resizer extension. This obviously requires gcc and the make tools. The resizer depends on the GD library. The source code is located in lib/danbooru_image_resizer. Run "ruby extconf.rb" then run "make". You should NOT have to install the resulting extension.

If you are compiling the resizer on OS X PPC, see http://cart.donmai.us/ticket/282 if you are having trouble.

Create the database. A schema file is provided at db/postgres.sql. You should also run the migration scripts by entering "RAILS_ENV=production rake db:migrate". This requires the resizer extension to have been built, so be sure you have completed that step.

Caching is only necessary if you expect to get more than 200,000 visitors a month. You will find the necesssary settings in the default_config.rb file that you can copy over into your local_config.rb. Make sure the memcached daemon is running before you start up Danbooru.

Configure your web server to connect to Danbooru. The best way is to set up Mongrel to run Danbooru, and have your web server proxy requests to Mongrel.

The first account you create will automatically become the administrator, so you should do this first.
