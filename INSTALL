Installing Danbooru from scratch is not for the faint of heart. You should be comfortable with the Linux command line. Installing on Windows is possible but is not officially supported. If you want something similar to Danbooru that is easier to install, try Shimmie (http://trac.shishnet.org/shimmie2). Shimmie uses PHP and MySQL and should be straightforward to install on most hosts.

For best performance, you will need at least 256MB of RAM for PostgreSQL and Rails. The memory requirement will grow as your database gets bigger; the main Danbooru database takes up around 400MB of memory by itself.

Danbooru has the following general dependencies:
- ruby-1.8.6
- libgd
- PostgreSQL 8.3

If you are installing on a Debian system, the following command should work:

{
apt-get install gcc make libreadline5-dev zlib1g-dev flex bison libgd2-noxpm libgd2-noxpm-dev ruby1.8 ruby1.8-dev ri1.8 rdoc1.8 irb1.8 libdbm-ruby1.8 libgdbm-ruby1.8 libopenssl-ruby1.8 libreadline-ruby1.8 rubygems ragel memcached libmemcache-dev subversion nginx git-core devscripts
}

You will need to symbolically link the ruby1.8 files:

{
cd /usr/bin
ln -s ruby1.8 ruby
ln -s irb1.8 irb
ln -s ri1.8 ri
ln -s rdoc1.8 rdoc
ln -s erb1.8 erb
}

As of this writing, PostgreSQL 8.3 is still in experimental so you will have to install it manually:

{
mkdir pgsql-common
cd pgsql-common
wget http://ftp.de.debian.org/debian/pool/main/p/postgresql-common/postgresql-common_82.dsc
wget http://ftp.de.debian.org/debian/pool/main/p/postgresql-common/postgresql-common_82.tar.gz
dpkg-source -x *.dsc
cd postgresql-common-82
debuild
cd ..
dpkg -i *.deb
cd ..
mkdir pgsql
cd pgsql
wget http://ftp.de.debian.org/debian/pool/main/p/postgresql-8.3/postgresql-8.3_8.3~beta4-1.dsc
wget http://ftp.de.debian.org/debian/pool/main/p/postgresql-8.3/postgresql-8.3_8.3~beta4.orig.tar.gz
wget http://ftp.de.debian.org/debian/pool/main/p/postgresql-8.3/postgresql-8.3_8.3~beta4-1.diff.gz
dpkg-source -x *.dsc
cd postgresql-8.3-8.3~beta4
debuild
cd ..
dpkg -i *.deb
}

Now it's time to install the gems:

{
gem install postgres -- --with-pgsql-lib-dir=/usr/lib --with-pgsql-include-dir=/usr/include/postgresql
for i in diff-lcs html5 mongrel memcache-client aws-s3 ; do gem install $i -y ; done
gem install rails --version=1.2.6 -y
gem install acts_as_versioned
gem install superredcloth --source http://code.whytheluckystiff.net
}

Once you've downloaded and installed everything, get the latest copy of Danbooru using Subversion:

>> svn co svn://danbooru.donmai.us/danbooru/trunk

Now it's time to configure your copy. Change into the config directory and edit the following files: database.yml, local_config.rb. Example files are provided.

You should manually build the resizer extension. This obviously requires gcc and the make tools. The resizer depends on the GD library. The source code is located in lib/danbooru_image_resizer. Run "ruby extconf.rb" then run "make". You should NOT have to install the resulting extension.

Create the database. From the root Danbooru directory, run:

{
psql DATABASE_NAME < db/postgres.sql
RAILS_ENV=production rake db:migrate
}

Build the resizer extension:

{
cd lib/danbooru_image_resizer
ruby extconf.rb
make
}

Caching is only necessary if you expect to get more than 200,000 visitors a month. You will find the necesssary settings in the default_config.rb file that you can copy over into your local_config.rb. Make sure the memcached daemon is running before you start up Danbooru.

Configure your web server to connect to Danbooru. The best way is to set up Mongrel to run Danbooru, and have your web server proxy requests to Mongrel.

The first account you create will automatically become the administrator, so you should do this first.
